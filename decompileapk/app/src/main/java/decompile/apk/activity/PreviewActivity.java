package decompile.apk.activity;

import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import android.widget.Toolbar;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.FileProvider;
import androidx.viewpager.widget.ViewPager;
import com.asharinfotech.muslimweddingcard.R;
import com.google.android.material.tabs.TabLayout;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.html.HtmlTags;
import com.itextpdf.text.pdf.CMYKColor;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.tom_roush.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.Date;

public class PreviewActivity extends AppCompatActivity {
    public String address_line1;
    public TextView address_line1_1;
    public String address_line2;
    public TextView address_line2_1;
    public String age;
    public TextView age1;
    private Button back;
    public String blood_group;
    public TextView blood_group1;
    public String caste;
    public TextView caste1;
    public String complexion;
    public TextView complexion1;
    public String district;
    public TextView district1;
    public String dob;
    public TextView dob1;
    private Button download;
    public String education_details;
    public TextView education_details1;
    public String father_name;
    public TextView father_name1;
    public String fathers_occupation;
    public TextView fathers_occupation1;
    public String full_name;
    public TextView full_name1;
    public String gotra;
    public TextView gotra1;
    public String height;
    public TextView height1;
    TableLayout horoscopeDetails;
    public String imagepath;
    public String income_details;
    public TextView income_details1;
    public String mangal;
    public TextView mangal1;
    public String married_brothers;
    public TextView married_brothers1;
    public String married_sisters;
    public TextView married_sisters1;
    public String mother_name;
    public TextView mother_name1;
    public String mothers_occupation;
    public TextView mothers_occupation1;
    public String occupation_details;
    public TextView occupation_details1;
    public String parents_contact;
    public TextView parents_contact1;
    public String partner_expectations;
    public TextView partner_expectations1;
    public String personal_contact_number;
    public TextView personal_contact_number1;
    public String personal_email;
    public TextView personal_email1;
    public String pincode;
    public TextView pincode1;
    public String pob;
    public TextView pob1;
    public String religion;
    public TextView religion1;
    public String state;
    public TextView state1;
    private TabLayout tabLayout;
    public String tob;
    public TextView tob1;
    private Toolbar toolbar;
    public String total_brothers;
    public TextView total_brothers1;
    public String total_sisters;
    public TextView total_sisters1;
    TableRow trComplexion;
    TableRow trHeight;
    TableRow trIncome;
    TableRow trNoSiblings;
    TableRow trParentContactNumber;
    TableRow trPartnerExpectations;
    TableRow trPersonalContactNumber;
    TableRow trPersonalEmail;
    TableRow trSiblingDetails;
    private ViewPager viewPager;

    public void onBackPressed() {
    }

    /* Access modifiers changed, original: protected */
    public void onCreate(Bundle bundle) {
        TextView textView;
        super.onCreate(bundle);
        getWindow().setFlags(8192, 8192);
        setContentView((int) R.layout.activity_preview);
        Intent intent = getIntent();
        this.full_name = intent.getStringExtra("full_name");
        this.religion = intent.getStringExtra("religion");
        this.dob = intent.getStringExtra("dob");
        this.age = intent.getStringExtra("age");
        this.height = intent.getStringExtra(HtmlTags.HEIGHT);
        this.blood_group = intent.getStringExtra("blood_group");
        this.complexion = intent.getStringExtra("complexion");
        this.personal_contact_number = intent.getStringExtra("personal_contact_number");
        this.personal_email = intent.getStringExtra("personal_email");
        this.tob = intent.getStringExtra("tob");
        this.pob = intent.getStringExtra("pob");
        this.mangal = intent.getStringExtra("mangal");
        this.gotra = intent.getStringExtra("gotra");
        this.education_details = intent.getStringExtra("education_details");
        this.occupation_details = intent.getStringExtra("occupation_details");
        this.income_details = intent.getStringExtra("income_details");
        this.father_name = intent.getStringExtra("father_name");
        this.fathers_occupation = intent.getStringExtra("fathers_occupation");
        this.mother_name = intent.getStringExtra("mother_name");
        this.mothers_occupation = intent.getStringExtra("mothers_occupation");
        this.total_brothers = intent.getStringExtra("total_brothers");
        this.married_brothers = intent.getStringExtra("married_brothers");
        this.total_sisters = intent.getStringExtra("total_sisters");
        this.parents_contact = intent.getStringExtra("parents_contact");
        this.partner_expectations = intent.getStringExtra("partner_expectations");
        this.address_line1 = intent.getStringExtra("address_line1");
        this.address_line2 = intent.getStringExtra("address_line2");
        this.district = intent.getStringExtra("district");
        this.state = intent.getStringExtra("state");
        this.pincode = intent.getStringExtra("pincode");
        this.imagepath = intent.getStringExtra("imagepath");
        String str = "";
        if (this.state.equals("Select State") || this.state.equals(str)) {
            this.state = str;
        }
        this.trHeight = (TableRow) findViewById(R.id.trHeight);
        if (this.height.equals("Select Height") || this.height.equals(str)) {
            this.height = str;
            this.trHeight.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText04);
            this.height1 = textView;
            textView.setText(this.height);
        }
        if (this.blood_group.equals("Select Blood Group") || this.blood_group.equals(str)) {
            this.blood_group = str;
        }
        this.trComplexion = (TableRow) findViewById(R.id.trComplexion);
        if (this.complexion.equals("Select Complexion") || this.complexion.equals(str)) {
            this.complexion = str;
            this.trComplexion.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText06);
            this.complexion1 = textView;
            textView.setText(this.complexion);
        }
        File file = new File(this.imagepath);
        if (file.exists()) {
            ((ImageView) findViewById(R.id.imageView)).setImageBitmap(BitmapFactory.decodeFile(file.getAbsolutePath()));
        }
        this.horoscopeDetails = (TableLayout) findViewById(R.id.horoscope_details);
        if (this.tob.equals(str) && this.pob.equals(str) && this.mangal.equals("No") && this.gotra.equals(str)) {
            this.horoscopeDetails.setVisibility(8);
        }
        textView = (TextView) findViewById(R.id.editText01);
        this.full_name1 = textView;
        textView.setText(this.full_name);
        textView = (TextView) findViewById(R.id.editText020);
        this.religion1 = textView;
        textView.setText(this.religion);
        textView = (TextView) findViewById(R.id.editText03);
        this.dob1 = textView;
        textView.setText(this.dob);
        if (this.age.equals(PDLayoutAttributeObject.GLYPH_ORIENTATION_VERTICAL_ZERO_DEGREES)) {
            textView = (TextView) findViewById(R.id.editText030);
            this.age1 = textView;
            textView.setText(str);
        } else {
            textView = (TextView) findViewById(R.id.editText030);
            this.age1 = textView;
            textView.setText(this.age);
        }
        textView = (TextView) findViewById(R.id.editText05);
        this.blood_group1 = textView;
        textView.setText(this.blood_group);
        this.trPersonalContactNumber = (TableRow) findViewById(R.id.trPersonalContactNumber);
        if (this.personal_contact_number.equals(str)) {
            this.personal_contact_number = str;
            this.trPersonalContactNumber.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText060);
            this.personal_contact_number1 = textView;
            textView.setText(this.personal_contact_number);
        }
        this.trPersonalEmail = (TableRow) findViewById(R.id.trPersonalEmail);
        if (this.personal_email.equals(str)) {
            this.personal_email = str;
            this.trPersonalEmail.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText061);
            this.personal_email1 = textView;
            textView.setText(this.personal_email);
        }
        textView = (TextView) findViewById(R.id.editText07);
        this.tob1 = textView;
        textView.setText(this.tob);
        textView = (TextView) findViewById(R.id.editText08);
        this.pob1 = textView;
        textView.setText(this.pob);
        textView = (TextView) findViewById(R.id.editText09);
        this.mangal1 = textView;
        textView.setText(this.mangal);
        textView = (TextView) findViewById(R.id.editText10);
        this.gotra1 = textView;
        textView.setText(this.gotra);
        textView = (TextView) findViewById(R.id.editText11);
        this.education_details1 = textView;
        textView.setText(this.education_details);
        textView = (TextView) findViewById(R.id.editText12);
        this.occupation_details1 = textView;
        textView.setText(this.occupation_details);
        this.trIncome = (TableRow) findViewById(R.id.trIncome);
        if (this.income_details.equals(str)) {
            this.income_details = str;
            this.trIncome.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText13);
            this.income_details1 = textView;
            textView.setText(this.income_details);
        }
        textView = (TextView) findViewById(R.id.editText14);
        this.father_name1 = textView;
        textView.setText(this.father_name);
        textView = (TextView) findViewById(R.id.editText15);
        this.fathers_occupation1 = textView;
        textView.setText(this.fathers_occupation);
        textView = (TextView) findViewById(R.id.editText16);
        this.mother_name1 = textView;
        textView.setText(this.mother_name);
        textView = (TextView) findViewById(R.id.editText17);
        this.mothers_occupation1 = textView;
        textView.setText(this.mothers_occupation);
        this.trNoSiblings = (TableRow) findViewById(R.id.trNoSiblings);
        if (this.total_brothers.equals(str)) {
            this.total_brothers = str;
            this.trNoSiblings.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText18);
            this.total_brothers1 = textView;
            textView.setText(this.total_brothers);
        }
        this.trSiblingDetails = (TableRow) findViewById(R.id.trSiblingDetails);
        if (this.married_brothers.equals(str)) {
            this.married_brothers = str;
            this.trSiblingDetails.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText19);
            this.married_brothers1 = textView;
            textView.setText(this.married_brothers);
        }
        this.trParentContactNumber = (TableRow) findViewById(R.id.trParentContactNumber);
        if (this.parents_contact.equals(str)) {
            this.parents_contact = str;
            this.trParentContactNumber.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText22);
            this.parents_contact1 = textView;
            textView.setText(this.parents_contact);
        }
        this.trPartnerExpectations = (TableRow) findViewById(R.id.trPartnerExpectations);
        if (this.partner_expectations.equals(str)) {
            this.partner_expectations = str;
            this.trPartnerExpectations.setVisibility(8);
        } else {
            textView = (TextView) findViewById(R.id.editText23);
            this.partner_expectations1 = textView;
            textView.setText(this.partner_expectations);
        }
        if (this.address_line1.equals(str) && this.address_line2.equals(str)) {
            textView = (TextView) findViewById(R.id.editText24);
            this.address_line1_1 = textView;
            textView.setText(str);
        } else if (this.address_line1.equals(str)) {
            textView = (TextView) findViewById(R.id.editText24);
            this.address_line1_1 = textView;
            textView.setText(this.address_line2);
        } else if (this.address_line2.equals(str)) {
            textView = (TextView) findViewById(R.id.editText24);
            this.address_line1_1 = textView;
            textView.setText(this.address_line1);
        } else {
            textView = (TextView) findViewById(R.id.editText24);
            this.address_line1_1 = textView;
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append(this.address_line1);
            stringBuilder.append(",\n");
            stringBuilder.append(this.address_line2);
            textView.setText(stringBuilder.toString());
        }
        textView = (TextView) findViewById(R.id.editText26);
        this.district1 = textView;
        textView.setText(this.district);
        textView = (TextView) findViewById(R.id.editText27);
        this.state1 = textView;
        textView.setText(this.state);
        textView = (TextView) findViewById(R.id.editText28);
        this.pincode1 = textView;
        textView.setText(this.pincode);
        Button button = (Button) findViewById(R.id.back);
        this.back = button;
        button.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                PreviewActivity.this.backData();
            }
        });
        button = (Button) findViewById(R.id.download);
        this.download = button;
        button.setOnClickListener(new OnClickListener() {
            public void onClick(View view) {
                Intent intent = new Intent(PreviewActivity.this.getApplicationContext(), PaymentRazorpay.class);
                intent.putExtra("full_name", PreviewActivity.this.full_name);
                intent.putExtra("religion", PreviewActivity.this.religion);
                intent.putExtra("dob", PreviewActivity.this.dob);
                intent.putExtra("age", PreviewActivity.this.age);
                intent.putExtra(HtmlTags.HEIGHT, PreviewActivity.this.height);
                intent.putExtra("blood_group", PreviewActivity.this.blood_group);
                intent.putExtra("complexion", PreviewActivity.this.complexion);
                intent.putExtra("personal_contact_number", PreviewActivity.this.personal_contact_number);
                intent.putExtra("personal_email", PreviewActivity.this.personal_email);
                intent.putExtra("tob", PreviewActivity.this.tob);
                intent.putExtra("pob", PreviewActivity.this.pob);
                intent.putExtra("mangal", PreviewActivity.this.mangal);
                intent.putExtra("gotra", PreviewActivity.this.gotra);
                intent.putExtra("education_details", PreviewActivity.this.education_details);
                intent.putExtra("occupation_details", PreviewActivity.this.occupation_details);
                intent.putExtra("income_details", PreviewActivity.this.income_details);
                intent.putExtra("father_name", PreviewActivity.this.father_name);
                intent.putExtra("fathers_occupation", PreviewActivity.this.fathers_occupation);
                intent.putExtra("mother_name", PreviewActivity.this.mother_name);
                intent.putExtra("mothers_occupation", PreviewActivity.this.mothers_occupation);
                intent.putExtra("total_brothers", PreviewActivity.this.total_brothers);
                intent.putExtra("married_brothers", PreviewActivity.this.married_brothers);
                intent.putExtra("total_sisters", PreviewActivity.this.total_sisters);
                intent.putExtra("parents_contact", PreviewActivity.this.parents_contact);
                intent.putExtra("partner_expectations", PreviewActivity.this.partner_expectations);
                intent.putExtra("address_line1", PreviewActivity.this.address_line1);
                intent.putExtra("address_line2", PreviewActivity.this.address_line2);
                intent.putExtra("district", PreviewActivity.this.district);
                intent.putExtra("state", PreviewActivity.this.state);
                intent.putExtra("pincode", PreviewActivity.this.pincode);
                intent.putExtra("imagepath", PreviewActivity.this.imagepath);
                PreviewActivity.this.startActivity(intent);
            }
        });
    }

    public void backData() {
        Intent intent = new Intent(getApplicationContext(), ProfileImageActivity.class);
        intent.putExtra("full_name", this.full_name);
        intent.putExtra("religion", this.religion);
        intent.putExtra("dob", this.dob);
        intent.putExtra("age", this.age);
        intent.putExtra(HtmlTags.HEIGHT, this.height);
        intent.putExtra("blood_group", this.blood_group);
        intent.putExtra("complexion", this.complexion);
        intent.putExtra("personal_contact_number", this.personal_contact_number);
        intent.putExtra("personal_email", this.personal_email);
        intent.putExtra("tob", this.tob);
        intent.putExtra("pob", this.pob);
        intent.putExtra("mangal", this.mangal);
        intent.putExtra("gotra", this.gotra);
        intent.putExtra("education_details", this.education_details);
        intent.putExtra("occupation_details", this.occupation_details);
        intent.putExtra("income_details", this.income_details);
        intent.putExtra("father_name", this.father_name);
        intent.putExtra("fathers_occupation", this.fathers_occupation);
        intent.putExtra("mother_name", this.mother_name);
        intent.putExtra("mothers_occupation", this.mothers_occupation);
        intent.putExtra("total_brothers", this.total_brothers);
        intent.putExtra("married_brothers", this.married_brothers);
        intent.putExtra("total_sisters", this.total_sisters);
        intent.putExtra("parents_contact", this.parents_contact);
        intent.putExtra("partner_expectations", this.partner_expectations);
        intent.putExtra("address_line1", this.address_line1);
        intent.putExtra("address_line2", this.address_line2);
        intent.putExtra("district", this.district);
        intent.putExtra("state", this.state);
        intent.putExtra("pincode", this.pincode);
        intent.putExtra("imagepath", this.imagepath);
        startActivity(intent);
    }

    private void createPdf() {
        StringBuilder stringBuilder;
        String str = ".pdf";
        String str2 = "PDFCreator";
        String str3 = "";
        String str4 = "\n";
        Document document = new Document(PageSize.A4);
        try {
            PdfPTable pdfPTable;
            PdfPCell pdfPCell;
            String file = Environment.getExternalStorageDirectory().toString();
            StringBuilder stringBuilder2 = new StringBuilder();
            stringBuilder2.append(file);
            stringBuilder2.append("/resumepdf");
            File file2 = new File(stringBuilder2.toString());
            file2.mkdirs();
            file = new SimpleDateFormat("dd-MM-yyyy-hh-mm-ss").format(new Date());
            StringBuilder stringBuilder3 = new StringBuilder();
            stringBuilder3.append(file);
            stringBuilder3.append(str);
            PdfWriter.getInstance(document, new FileOutputStream(new File(file2, stringBuilder3.toString())));
            document.open();
            PdfPTable pdfPTable2 = new PdfPTable(1);
            PdfPCell pdfPCell2 = new PdfPCell(new Phrase("\n\n\n"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable2.setWidthPercentage(80.0f);
            pdfPTable2.addCell(pdfPCell2);
            document.add(pdfPTable2);
            Paragraph paragraph = new Paragraph("Marriage Resume");
            Font font = new Font(FontFamily.TIMES_ROMAN, 30.0f, 5, BaseColor.GRAY);
            paragraph.setAlignment(1);
            paragraph.setFont(font);
            document.add(paragraph);
            paragraph = new Paragraph(this.full_name);
            font = new Font(FontFamily.COURIER, 18.0f, 0, CMYKColor.GREEN);
            paragraph.setAlignment(1);
            paragraph.setFont(font);
            document.add(paragraph);
            Bitmap bitmap = ((BitmapDrawable) getResources().getDrawable(R.drawable.frame_one)).getBitmap();
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            bitmap.compress(CompressFormat.JPEG, 100, byteArrayOutputStream);
            Element instance = Image.getInstance(byteArrayOutputStream.toByteArray());
            instance.setAbsolutePosition(330.0f, 642.0f);
            Paragraph paragraph2 = new Paragraph();
            paragraph2.add(instance);
            float width = document.getPageSize().getWidth();
            float height = document.getPageSize().getHeight();
            PrintStream printStream = System.out;
            StringBuilder stringBuilder4 = new StringBuilder();
            stringBuilder4.append("Width: ");
            stringBuilder4.append(width);
            printStream.println(stringBuilder4.toString());
            PrintStream printStream2 = System.out;
            stringBuilder4 = new StringBuilder();
            stringBuilder4.append("Height: ");
            stringBuilder4.append(height);
            printStream2.println(stringBuilder4.toString());
            instance.scaleToFit(width, height);
            instance.setAbsolutePosition(0.0f, 0.0f);
            paragraph2.setAlignment(2);
            document.add(paragraph2);
            if (!this.imagepath.equals(str3)) {
                ((BitmapDrawable) getResources().getDrawable(R.drawable.frame_one)).getBitmap().compress(CompressFormat.JPEG, 100, new ByteArrayOutputStream());
                byteArrayOutputStream.toByteArray();
                Image instance2 = Image.getInstance(this.imagepath);
                instance2.setAbsolutePosition(330.0f, 642.0f);
                instance2.scaleToFit(130.0f, 190.0f);
                instance2.setAbsolutePosition(430.0f, 570.0f);
                instance2.setRotationDegrees(90.0f);
                document.add(instance2);
            }
            Paragraph paragraph3 = new Paragraph();
            PdfPTable pdfPTable3 = new PdfPTable(1);
            PdfPCell pdfPCell3 = new PdfPCell(new Phrase(str4));
            pdfPCell3.setUseVariableBorders(true);
            pdfPCell3.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.setWidthPercentage(80.0f);
            pdfPTable3.addCell(pdfPCell3);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(1);
            pdfPCell2 = new PdfPCell(new Phrase("Personal Details\n"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.setWidthPercentage(80.0f);
            pdfPTable3.addCell(pdfPCell2);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Full Name:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.full_name));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Caste:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.caste));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Date of Birth:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.dob));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Age:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.age));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Height:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.height));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Blood Group:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.blood_group));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Complexion:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.complexion));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Personal Contact Number:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPCell2 = new PdfPCell(new Phrase(this.personal_contact_number));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell2);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable3 = new PdfPTable(1);
            pdfPCell3 = new PdfPCell(new Phrase(str4));
            pdfPCell3.setUseVariableBorders(true);
            pdfPCell3.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.setWidthPercentage(80.0f);
            pdfPTable3.addCell(pdfPCell3);
            document.add(pdfPTable3);
            if (!this.tob.equals(str3) || !this.pob.equals(str3) || !this.mangal.equals("No") || !this.gotra.equals(str3)) {
                pdfPTable = new PdfPTable(1);
                pdfPCell = new PdfPCell(new Phrase("Horoscope Details\n"));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.setWidthPercentage(80.0f);
                pdfPTable.addCell(pdfPCell);
                document.add(pdfPTable);
                pdfPTable = new PdfPTable(2);
                pdfPCell = new PdfPCell(new Phrase("Time of Birth:"));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPCell = new PdfPCell(new Phrase(this.tob));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPTable.setWidthPercentage(80.0f);
                document.add(pdfPTable);
                pdfPTable = new PdfPTable(2);
                pdfPCell = new PdfPCell(new Phrase("Place of Birth:"));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPCell = new PdfPCell(new Phrase(this.pob));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPTable.setWidthPercentage(80.0f);
                document.add(pdfPTable);
                pdfPTable = new PdfPTable(2);
                pdfPCell = new PdfPCell(new Phrase("Mangal:"));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPCell = new PdfPCell(new Phrase(this.mangal));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPTable.setWidthPercentage(80.0f);
                document.add(pdfPTable);
                pdfPTable = new PdfPTable(2);
                pdfPCell = new PdfPCell(new Phrase("Kuldevak / Gotra:"));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPCell = new PdfPCell(new Phrase(this.gotra));
                pdfPCell.setUseVariableBorders(true);
                pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.addCell(pdfPCell);
                pdfPTable.setWidthPercentage(80.0f);
                document.add(pdfPTable);
                pdfPTable = new PdfPTable(1);
                pdfPCell2 = new PdfPCell(new Phrase(str4));
                pdfPCell2.setUseVariableBorders(true);
                pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
                pdfPTable.setWidthPercentage(80.0f);
                pdfPTable.addCell(pdfPCell2);
                document.add(pdfPTable);
            }
            pdfPTable = new PdfPTable(1);
            pdfPCell = new PdfPCell(new Phrase("Education & Occupation Details\n"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.setWidthPercentage(80.0f);
            pdfPTable.addCell(pdfPCell);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Education Details:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.education_details));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Occupation Details:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.occupation_details));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Income Details:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.income_details));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(1);
            pdfPCell2 = new PdfPCell(new Phrase(str4));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.setWidthPercentage(80.0f);
            pdfPTable.addCell(pdfPCell2);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(1);
            pdfPCell = new PdfPCell(new Phrase("Family Details\n"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.setWidthPercentage(80.0f);
            pdfPTable.addCell(pdfPCell);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Fathers Name:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.father_name));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Fathers Occupation:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.fathers_occupation));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Mothers Name:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.mother_name));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Mothers Occupation:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.mothers_occupation));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Total Brothers:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.total_brothers));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Married Brothers:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.married_brothers));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Total Sisters:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.total_sisters));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable3 = new PdfPTable(2);
            pdfPCell2 = new PdfPCell(new Phrase("Married Sisters:"));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell2);
            PdfPCell pdfPCell4 = new PdfPCell(new Phrase(this.married_sisters));
            pdfPCell4.setUseVariableBorders(true);
            pdfPCell4.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable3.addCell(pdfPCell4);
            pdfPTable3.setWidthPercentage(80.0f);
            document.add(pdfPTable3);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Parents Contact Number:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.parents_contact));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell = new PdfPCell(new Phrase("Partners Expectations:"));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPCell = new PdfPCell(new Phrase(this.partner_expectations));
            pdfPCell.setUseVariableBorders(true);
            pdfPCell.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(1);
            pdfPCell2 = new PdfPCell(new Phrase(str4));
            pdfPCell2.setUseVariableBorders(true);
            pdfPCell2.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.setWidthPercentage(80.0f);
            pdfPTable.addCell(pdfPCell2);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(1);
            PdfPCell pdfPCell5 = new PdfPCell(new Phrase("Address Details\n"));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.setWidthPercentage(80.0f);
            pdfPTable.addCell(pdfPCell5);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell5 = new PdfPCell(new Phrase("Address Line 1:"));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPCell5 = new PdfPCell(new Phrase(this.address_line1));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell5 = new PdfPCell(new Phrase("Address Line 2:"));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPCell5 = new PdfPCell(new Phrase(this.address_line2));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell5 = new PdfPCell(new Phrase("District:"));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPCell5 = new PdfPCell(new Phrase(this.district));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell5 = new PdfPCell(new Phrase("State:"));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPCell5 = new PdfPCell(new Phrase(this.state));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            pdfPTable = new PdfPTable(2);
            pdfPCell5 = new PdfPCell(new Phrase("Pincode:"));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPCell5 = new PdfPCell(new Phrase(this.pincode));
            pdfPCell5.setUseVariableBorders(true);
            pdfPCell5.setBorderColor(new BaseColor(255, 255, 255, 0));
            pdfPTable.addCell(pdfPCell5);
            pdfPTable.setWidthPercentage(80.0f);
            document.add(pdfPTable);
            Intent intent = new Intent("android.intent.action.SEND");
            intent.setType("*/*");
            String file3 = Environment.getExternalStorageDirectory().toString();
            stringBuilder2 = new StringBuilder();
            stringBuilder2.append("/resumepdf/");
            stringBuilder2.append(file);
            stringBuilder2.append(str);
            intent.putExtra("android.intent.extra.STREAM", Uri.parse(FileProvider.getUriForFile(this, "com.softwebtechsol.marriagebiodata.provider", new File(file3, stringBuilder2.toString())).toString()));
            try {
                startActivity(Intent.createChooser(intent, "Send mail..."));
            } catch (ActivityNotFoundException unused) {
            }
        } catch (DocumentException e) {
            DocumentException documentException = e;
            stringBuilder = new StringBuilder();
            stringBuilder.append("DocumentException:");
            stringBuilder.append(documentException);
            Log.e(str2, stringBuilder.toString());
        } catch (IOException e2) {
            IOException iOException = e2;
            stringBuilder = new StringBuilder();
            stringBuilder.append("ioException:");
            stringBuilder.append(iOException);
            Log.e(str2, stringBuilder.toString());
        } catch (Throwable th) {
            Throwable th2 = th;
            document.close();
        }
        document.close();
    }
}
